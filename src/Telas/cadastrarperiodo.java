/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

import SistemaUniversitario.Aluno;
import SistemaUniversitario.Disciplina;
import SistemaUniversitario.Excecoes;
import SistemaUniversitario.Periodo;
import static Telas.TelaPrincipal.listaBDDisciplina;
import java.awt.Dimension;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static Telas.TelaPrincipal.listaBDPeriodo;

/**
 *
 * @author Maquina 8
 */
public class cadastrarperiodo extends javax.swing.JInternalFrame {
    
    public DefaultComboBoxModel CBDisciplinaModel = new DefaultComboBoxModel();
    public DefaultTableModel TableModelDisciplina = new DefaultTableModel();
    /**
     * Creates new form cadastrarperiodo
     */
    public cadastrarperiodo() {
        initComponents();
        
        preencherComboBoxDisciplina();
        inicializarTableModelDisciplina();
        carregarJtable (-1);
        
    }
    
    private void preencherComboBoxDisciplina (){
        
        for (Disciplina d: listaBDDisciplina){
            CBDisciplinaModel.addElement(d.getNome());
        }
        
        jComboBoxDisciplina.setModel(CBDisciplinaModel);
    }
    
    private void inicializarTableModelDisciplina(){
        TableModelDisciplina.addColumn("Código");
        TableModelDisciplina.addColumn("Nome");
        jTableDisciplina.setModel(TableModelDisciplina);
    }
    
    private void carregarJtable (int ItemSelecionado){
        for (int i = 0; i < listaBDDisciplina.size(); i++){
            if (ItemSelecionado == i){  
                for (int j = 0; j < jTableDisciplina.getRowCount() ;  j++){
                    if (jTableDisciplina.getModel().getValueAt(j, 0).equals(String.valueOf(listaBDDisciplina.get(i).getCod()))){
                        //JOptionPane.showMessageDialog(this,"já tem o bacana.");
                        return;
                    }
                }
                TableModelDisciplina.addRow(new String []{
                            String.valueOf(listaBDDisciplina.get(i).getCod()),
                            listaBDDisciplina.get(i).getNome(),
                        });
                return;
            }
        }
    }
     public void setPosicao (){
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jComboBoxDisciplina = new javax.swing.JComboBox();
        jButtonExcluirDisciplina = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDisciplina = new javax.swing.JTable();
        jButtonSalvar = new javax.swing.JButton();
        jButtonPesquisar1 = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButtonLimpar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldQtdCred = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNumeroPeriodo = new javax.swing.JTextField();

        jCheckBox1.setText("jCheckBox1");

        setClosable(true);
        setTitle("Cadastrar Período");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Disciplina", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bodoni MT", 0, 14))); // NOI18N

        jComboBoxDisciplina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDisciplinaActionPerformed(evt);
            }
        });

        jButtonExcluirDisciplina.setText("Excluir");
        jButtonExcluirDisciplina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirDisciplinaActionPerformed(evt);
            }
        });

        jTableDisciplina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableDisciplina);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBoxDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonExcluirDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonExcluirDisciplina))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonPesquisar1.setText("Pesquisar");
        jButtonPesquisar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisar1ActionPerformed(evt);
            }
        });

        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonLimpar.setText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Qtd de Créditos: ");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Número: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonPesquisar1)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(21, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldQtdCred)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNumeroPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldQtdCred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldNumeroPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonPesquisar1)
                    .addComponent(jButtonExcluir)
                    .addComponent(jButtonLimpar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        // TODO add your handling code here:
         jTextFieldQtdCred.setText(null);
         jTextFieldNumeroPeriodo.setText(null);
         for (int i=0; i<TableModelDisciplina.getRowCount(); i++){
             TableModelDisciplina.removeRow(i);
         }
    }//GEN-LAST:event_jButtonLimparActionPerformed
   
    
    private void jComboBoxDisciplinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDisciplinaActionPerformed
        carregarJtable(jComboBoxDisciplina.getSelectedIndex());
    }//GEN-LAST:event_jComboBoxDisciplinaActionPerformed

    private void jButtonExcluirDisciplinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirDisciplinaActionPerformed
        // TODO add your handling code here:
        
         if(jTableDisciplina.getSelectedRow() == -1){
            return;
        }
        ((DefaultTableModel)jTableDisciplina.getModel()).removeRow((jTableDisciplina.getSelectedRow()));
        
    }//GEN-LAST:event_jButtonExcluirDisciplinaActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        // TODO add your handling code here:
        try{
            
          if (jTextFieldNumeroPeriodo.getText().isEmpty()){
                throw new Excecoes(4001, "Campo número inválido.");
            }
            int num = Integer.parseInt(jTextFieldNumeroPeriodo.getText());
            if (num < 0){
                throw new Excecoes(4002, "Número inválido. Somente números inteiros positivos.");
            }
            for (Periodo p: TelaPrincipal.listaBDPeriodo){
                if (p.getNumero()== num){
                    if (TelaPrincipal.handleOptionPane("Excluir", "Período " + p.getNumero()+ " encontrado!\n" +
                                                        "Tem certeza que deseja excluir?") == true){
                        TelaPrincipal.listaBDPeriodo.remove(p);
                        JOptionPane.showMessageDialog(this, "Período excluído com sucesso");
                        jButtonLimparActionPerformed(evt);
                        return;
                    }else{
                        return;   
                    }
                }
            }
            JOptionPane.showMessageDialog(this, "Nenhum Período encontrado");
            jButtonLimparActionPerformed(evt);
            
        } catch (NullPointerException ex){
            JOptionPane.showMessageDialog(this, "Null test.\n" + ex.getMessage());
        } catch (NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "Campo número inválido!\n" + ex.getMessage());
        } catch (Excecoes ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE );
        }
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        // TODO add your handling code here:
         try{
            //Validações de obrigatoriedade dos campos.
            if (jTextFieldNumeroPeriodo.getText().isEmpty()){
                throw new Excecoes(9001, "Campo Número Período obrigatório");
            }
            if (jTextFieldQtdCred.getText().isEmpty()){
                throw new Excecoes(9001, "Campo QTD Crédito obrigatório");
            }
            
            //conversao String -> int
            int nump = Integer.parseInt(jTextFieldNumeroPeriodo.getText());
            int qtdc = Integer.parseInt(jTextFieldQtdCred.getText());
            
            
            //pesquisa de matrícula concorrente.
            for(Periodo p: TelaPrincipal.listaBDPeriodo){
                if (p.getQuantidadeCreditos()== qtdc){
                    if (TelaPrincipal.handleOptionPane("Quantidade de Creditos Concorrente", "Os dados serão sobescritos. Tem certeza disso?") == true){
                        p.setNumeroperiodo(jTextFieldNumeroPeriodo.getText());
                        p.setQtdCred(jTextFieldQtdCred.getText());
                        
                        JOptionPane.showMessageDialog(this, "Dados alterados com sucesso!");
                        jButtonLimparActionPerformed(evt);
                        return;
                    }else{
                        return;
                    }
                    //throw new Excecoes(9002,"Matrícula já existente");
                }
            }
            
            //instancia da classe Aluno.
            TelaPrincipal.listaBDPeriodo.add(new Periodo(qtdc,nump)); 
            
            JOptionPane.showMessageDialog(this, "Cadastro realizado com sucesso!");
            jButtonLimparActionPerformed(evt);
            
        } catch (NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "Campo Matrícula inválido!\n" + ex.getMessage());
        } catch (Excecoes ex) {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
    }                                             

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {                                                 
     
        
             
        
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonPesquisar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisar1ActionPerformed
        // TODO add your handling code here:
        
        try{
            //Retorno do textbox do JOptionPane
            String buscaNumero = (String)JOptionPane.showInputDialog("Quantidade de Crédito:");
            
            //Verifica o preenchimento do campo de pesquisa.
            if ((buscaNumero != null) && (buscaNumero.length() > 0)) {
                int num2 = Integer.parseInt(buscaNumero);
                for(Periodo p: TelaPrincipal.listaBDPeriodo){
                    if(p.getNumero()== num2){
                        jTextFieldNumeroPeriodo.setText(String . valueOf(p.getNumero()));
                        jTextFieldQtdCred.setText(String.valueOf(p.getQuantidadeCreditos()));
                        JOptionPane.showMessageDialog(this, "Encontrado: " + p.getNumero() + "!");
                        return;
                    }
                }
                JOptionPane.showMessageDialog(this, "Nenhum período encontrado");
                jButtonLimparActionPerformed(evt);
                return;
            }
            jButtonLimparActionPerformed(evt);
        } catch (NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Formato não suportado.\n" + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonPesquisar1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonExcluirDisciplina;
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonPesquisar1;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBoxDisciplina;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDisciplina;
    private javax.swing.JTextField jTextFieldNumeroPeriodo;
    private javax.swing.JTextField jTextFieldQtdCred;
    // End of variables declaration//GEN-END:variables
}
